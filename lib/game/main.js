// Generated by CoffeeScript 1.3.3
(function() {

  ig.module('game.main').requires('game.entities.player', 'impact.entity', 'impact.game', 'impact.font', 'game.levels.plains').defines(function() {
    window.sounds = {};
    window.LD25Game = ig.Game.extend({
      font: new ig.Font('media/04b03.font.png'),
      gravity: 600,
      paused: false,
      clearColor: null,
      state: 'title',
      titleImage: new ig.Image('media/box-cover.png'),
      farthestBackground: new ig.Image('media/farthest-background.png'),
      farBackground: new ig.Image('media/far-background.png'),
      nearBackground: new ig.Image('media/near-background.png'),
      armies: new ig.Image('media/advancing-army.png'),
      loseTimer: new ig.Timer(60 * 5),
      init: function() {
        ig.input.bind(ig.KEY.LEFT_ARROW, 'left');
        ig.input.bind(ig.KEY.RIGHT_ARROW, 'right');
        ig.input.bind(ig.KEY.UP_ARROW, 'up');
        ig.input.bind(ig.KEY.DOWN_ARROW, 'down');
        ig.input.bind(ig.KEY.SPACE, 'jump');
        return ig.input.bind(ig.KEY.ENTER, 'pause');
      },
      startGame: function() {
        this.currentLevel = this.loadLevel(LevelPlains);
        this.player = ig.game.getEntityByName('player');
        return this.loseTimer.reset();
      },
      nextLevel: function() {
        return alert('There are no more levels, so I guess you win for now.');
      },
      update: function() {
        var colMap, levelHeight, levelWidth;
        if (this.state === 'title') {
          if (ig.input.pressed('jump')) {
            this.state = 'game';
            this.startGame();
          }
        }
        if (this.state === 'game') {
          if (ig.input.pressed('pause')) {
            if (!this.paused) {
              this.paused = true;
              return;
            } else {
              this.paused = false;
            }
          }
          if (this.paused) {
            return;
          }
          if (this.player) {
            this.screen.x = this.player.pos.x - ig.system.width / 8 * 3;
            this.screen.y = this.player.pos.y - ig.system.height / 2;
            if (this.screen.x < 0) {
              this.screen.x = 0;
            }
            if (this.screen.y < 0) {
              this.screen.y = 0;
            }
            colMap = ig.game.collisionMap;
            levelWidth = colMap.width * colMap.tilesize;
            levelHeight = colMap.height * colMap.tilesize;
            if (this.screen.x > levelWidth - ig.system.width) {
              this.screen.x = levelWidth - ig.system.width;
            }
            if (this.screen.y > levelHeight - ig.system.height) {
              this.screen.y = levelHeight - ig.system.height;
            }
          }
        }
        return this.parent();
      },
      draw: function() {
        var levelWidth, minutes, ratio, seconds;
        if (this.state === 'title') {
          this.parent();
          this.titleImage.draw(0, 0);
        }
        if (this.state === 'game') {
          levelWidth = ig.game.collisionMap.width * ig.game.collisionMap.tilesize;
          ratio = this.screen.x / (levelWidth - ig.system.width);
          this.farthestBackground.draw(-(this.farthestBackground.width - ig.system.width) * ratio, 0);
          this.farBackground.draw(-(this.farBackground.width - ig.system.width) * ratio, 0);
          this.armies.draw(-this.armies.width + (this.armies.width - this.armies.width * (-this.loseTimer.delta() / (60 * 5))), 100);
          this.nearBackground.draw(-(this.nearBackground.width - ig.system.width) * ratio, 0);
          this.parent();
          if (-this.loseTimer.delta < 0) {
            alert('The king and everyone in the castle died.  Now YOU are the villain.');
            return alert('Directed by M Night Shamalan');
          } else {
            minutes = Math.floor(-this.loseTimer.delta() / 60.0).toFixed(0);
            seconds = Math.floor(-this.loseTimer.delta() % 60).toFixed(0);
            if (seconds < 10) {
              seconds = '0' + seconds;
            }
            return this.font.draw("Armies arrive in: " + minutes + ':' + seconds, 80, 10);
          }
        }
      }
    });
    if (!ig.global.wm) {
      return soundManager.setup({
        url: 'lib/soundmanager/swf/',
        onready: function() {
          window.sounds = {
            'sound': soundManager.createSound({
              id: 'sound',
              url: 'media/sound.wav'
            })
          };
          return ig.main('#canvas', window.LD25Game, 60, 256, 240, 2);
        },
        ontimeout: function() {
          return alert('Could not start Soundmanager.  Is Flash blocked?');
        }
      });
    } else {
      return ig.main('#canvas', window.LD25Game, 30, 256, 240, 2);
    }
  });

}).call(this);
